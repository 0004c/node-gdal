environment:
  AWS_ACCESS_KEY_ID:
    secure: ihP9C8AMdicFGeffdKqgNG1O4n68jDHQPAZCB/IfuZg=
  AWS_SECRET_ACCESS_KEY:
    secure: G45Qz4paCV4VpsA939dz7i2PQiTdVOYwh1paZ3sGSdS9REKnLHB2cmToak8uAyHP
  matrix:
    #- nodejs_version: "0.10.32"
    #  msvs_toolset: 12
    #  PLATFORM: x64
    #- nodejs_version: "0.10.32"
    #  msvs_toolset: 12
    #  PLATFORM: x86
    #- nodejs_version: "0.11.13"
    #  msvs_toolset: 12
    #  PLATFORM: x64
    #- nodejs_version: "0.11.13"
    #  msvs_toolset: 12
    #  PLATFORM: x86
    - nodejs_version: "0.10.33"
      msvs_toolset: 14
      PLATFORM: x64
      BUILD_ARGS: --dist-url=https://s3.amazonaws.com/mapbox/node-cpp11 --toolset=v140
    - nodejs_version: "0.11.14"
      msvs_toolset: 14
      PLATFORM: x64
      BUILD_ARGS: --dist-url=https://s3.amazonaws.com/mapbox/node-cpp11 --toolset=v140

os: Visual Studio 2014 CTP4

artifacts:
  - path: test/artifacts/*.txt
    name: Test Logs

install:
  - SET PATH=%APPDATA%\npm;%PATH%
  # add local node to path (since we install it for msvs_toolset == 14)
  - SET PATH=%CD%;%PATH%;
  # add local node-pre-gyp dir to path
  - SET PATH=node_modules\.bin;%PATH%
  # use 64 bit python if platform is 64 bit
  - if "%PLATFORM%" == "x64" set PATH=C:\Python27-x64;%PATH%
  # install node version per visual studio toolset
  - if "%msvs_toolset%" == "12" powershell Install-Product node $env:nodejs_version $env:Platform
  - if "%msvs_toolset%" == "14" powershell Write-Output "fetching https://mapbox.s3.amazonaws.com/node-cpp11/v$env:nodejs_version/$env:Platform/node.exe"
  - if "%msvs_toolset%" == "14" powershell Start-FileDownload "https://mapbox.s3.amazonaws.com/node-cpp11/v$env:nodejs_version/$env:Platform/node.exe"
  - node -v
  - node -e "console.log(process.argv,process.execPath)"
  - npm --version
  # npm install npm -g
  # fix for https://github.com/npm/npm/issues/6246:
  - npm -g install npm@1.4.28
  - npm --version
  # upgrade node-gyp to support --msvs_version=2013
  - npm install node-gyp
  # clear out node-gyp header cache
  - if "%msvs_toolset%" == "14" rd /s /q %USERPROFILE%\.node-gyp
  - SET PATH=C:\Program Files (x86)\MSBuild\%msvs_toolset%.0\bin;%PATH%
  - SET PATH=C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\bin;%PATH%
  - if %platform% == x64 CALL "C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\vcvarsall.bat" amd64
  - if %platform% == x86 CALL "C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\vcvarsall.bat" amd64_x86
  - SET CM=%APPVEYOR_REPO_COMMIT_MESSAGE%
  - IF "%CM%" == "%CM:[publish binary]=%" (SET ENABLE_LOGGING=1)
  - npm install https://github.com/naturalatlas/mocha/archive/fix/333.tar.gz
  # build with/without logging depending on if we're pushing a binary
  - IF NOT "%ENABLE_LOGGING%" == "1" (npm install --build-from-source --msvs_version=2013  %BUILD_ARGS% --loglevel=http)
  - IF "%ENABLE_LOGGING%" == "1" (npm install --build-from-source --msvs_version=2013 --enable-logging=true  %BUILD_ARGS% --loglevel=http)
  - node_modules\.bin\node-pre-gyp reveal module --silent > module.txt
  - SET /p MODULE=<module.txt
  - del module.txt
  - node -e "console.log(process.execPath)" > node_path.txt
  - SET /p NODE_EXE_PATH=<node_path.txt
  - del node_path.txt
  # should display MSVCP140.dll if build with visual studio 2014 and /MD
  - dumpbin /DEPENDENTS "%NODE_EXE_PATH%" || true
  - dumpbin /DEPENDENTS "%MODULE%" || true
  - npm test || SET HAD_ERROR=1
  - IF "%ENABLE_LOGGING%" == "1" (appveyor PushArtifact test/artifacts/log.txt)
  - IF DEFINED HAD_ERROR (EXIT /B 1)
  - node_modules\.bin\node-pre-gyp package %BUILD_ARGS%
  - ECHO commit message %CM%
  - ECHO pull request %APPVEYOR_PULL_REQUEST_NUMBER%
  - ECHO branch %APPVEYOR_REPO_BRANCH%
  - SET "IS_PR="&FOR /f "delims=0123456789" %%i IN ("%APPVEYOR_PULL_REQUEST_NUMBER%") DO SET IS_PR=%%i
  - IF NOT "%CM%" == "%CM:[publish binary]=%" (IF NOT DEFINED IS_PR (IF "%APPVEYOR_REPO_BRANCH%" == "master" node_modules\.bin\node-pre-gyp unpublish publish %BUILD_ARGS%))

build: OFF
test: OFF
test_script: OFF
deploy: OFF